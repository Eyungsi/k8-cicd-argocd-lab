name: CI/CD • One app → ECR → ArgoCD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPO: docker-repo
  MANIFEST: deploy1.yaml
  CONTAINER_NAME: app1

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.vars.outputs.TAG }}
      IMAGE_NAME: ${{ steps.vars.outputs.IMAGE_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image vars
        id: vars
        run: |
          # Debug: Check if environment variables are available
          echo "AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID"
          echo "AWS_REGION: $AWS_REGION"
          echo "ECR_REPO: $ECR_REPO"
          
          # Construct the full image name
          FULL_IMAGE_NAME="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO"
          SHORT_TAG="${GITHUB_SHA::7}"
          
          echo "TAG=$SHORT_TAG" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=$FULL_IMAGE_NAME" >> "$GITHUB_OUTPUT"
          echo "TAG=$SHORT_TAG" >> "$GITHUB_ENV"
          echo "IMAGE_NAME=$FULL_IMAGE_NAME" >> "$GITHUB_ENV"

      - name: Assert image vars
        run: |
          echo "Checking IMAGE_NAME: $IMAGE_NAME"
          echo "Checking TAG: $TAG"
          test -n "$IMAGE_NAME" || { echo "IMAGE_NAME is empty"; exit 1; }
          test -n "$TAG" || { echo "TAG is empty"; exit 1; }

      - name: Build image
        run: |
          echo "Building with IMAGE_NAME: $IMAGE_NAME"
          echo "Building with TAG: $TAG"
          docker build -t $IMAGE_NAME:$TAG -t $IMAGE_NAME:latest .

  test_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: fs
          path: .
          severity: HIGH,CRITICAL
          ignore-unfixed: true

  push_image:
    runs-on: ubuntu-latest
    needs: [build, test_scan]
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPO" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPO" >/dev/null

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image vars
        run: |
          echo "IMAGE_NAME=${{ needs.build.outputs.IMAGE_NAME }}" >> "$GITHUB_ENV"
          echo "TAG=${{ needs.build.outputs.TAG }}" >> "$GITHUB_ENV"
          test -n "${{ needs.build.outputs.IMAGE_NAME }}" || { echo "IMAGE_NAME is empty"; exit 1; }
          test -n "${{ needs.build.outputs.TAG }}" || { echo "TAG is empty"; exit 1; }

      - name: Build image
        run: |
          docker build -t $IMAGE_NAME:$TAG -t $IMAGE_NAME:latest .

      - name: Push image to ECR
        run: |
          docker push $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push_image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update manifest
        uses: mikefarah/yq@v4.44.3
        with:
          cmd: |
            yq -i '(.spec.template.spec.containers[] | select(.name==env(CONTAINER_NAME)) | .image) = env(NEW_IMAGE)' ${{ env.MANIFEST }}
        env:
          NEW_IMAGE: ${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.TAG }}

      - name: Commit & push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add "${{ env.MANIFEST }}"
          git commit -m "deploy: ${{ env.CONTAINER_NAME }} -> ${{ needs.build.outputs.IMAGE_NAME }}:${{ needs.build.outputs.TAG }}" || echo "No changes"
          git push